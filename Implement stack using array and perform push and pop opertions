#include <stdio.h>
struct Arraystack
{
    int top;
    int capacity;
    int *array;
};
struct Arraystack* createStack(int cap)
{
    struct Arraystack *stack;
    stack = malloc(sizeof (struct Arraystack));
    stack->capacity=cap;
    stack->top=-1;
    stack->array= malloc(sizeof(int)*stack->capacity);
    return (stack);
}
int isfull(struct Arraystack* stack)
{
    if (stack->top==stack->capacity-1)
        return 1;
    
    else 
    return 0;
    
}
int isEmpty(struct Arraystack* stack){
    if (stack->top == -1)
    return 1;
    else 
    return 0;
}
void push(struct Arraystack* stack,int item){
    if (!isfull(stack))
   {
       stack->top++;
       stack->array[stack->top]=item;
   }
}
int pop(struct Arraystack* stack){
    int item;
    if (!isEmpty(stack)){
        item = stack->array[stack->top];
        stack ->top--;
        return(item);
    }
    return -1;
}
int main()
{
    struct Arraystack* stack;
    stack = createStack(4);
    int choice,item ;
    do
    {
        printf("1.push\n2.pop\n3.exit\n");
        scanf("%d",&choice);
        switch (choice)
        {
         case 1:
            printf("enter the number");
            scanf("%d",&item);
            push(stack,item);
            break;
         case 2:
            item = pop(stack);
            if (item == -1)
            printf("Stack is empty\n");
            else 
            printf("popped value is %d \n",item);
            break;
        case 3:
            exit(0);       
        }
        
    }
    while(1);
    return 0;
}
